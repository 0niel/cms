version: '3.9'

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /usr/share/nginx/html
      - acme:/etc/acme.sh
    networks:
      - proxy
    restart: always


  letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme:/etc/acme.sh
    restart: always

  strapi:
    hostname: strapi
    build: 
      context: .
      dockerfile: Dockerfile.prod
    image: ${IMAGE_STRAPI}
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
      VIRTUAL_HOST: cms.mirea.ninja
      LETSENCRYPT_HOST: cms.mirea.ninja
      VIRTUAL_PORT: 1337

    volumes:
      - ./config:/opt/app/config
      # - ./src:/opt/app/src
      # - ./package.json:/opt/package.json
      # - ./yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    # ports:
    #   - '1337:1337'

    ports:
      - '1337:80'
    expose:
      - 1337
    networks:
      - strapi-bridge
      - proxy
    depends_on:
      - strapiDB

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder

    ports:
      - '5432:5432'
    networks:
      - strapi-bridge


volumes:
  strapi-data:
  conf:
  vhost:
  dhparam:
  certs:
  acme:


networks:
  proxy:
    external:
      name: nginx-proxy

  strapi-bridge:
    name: Strapi
    driver: bridge
